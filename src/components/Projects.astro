---
import { siteConfig } from "../config";
const hasProjects = siteConfig.projects && siteConfig.projects.length > 0;
const initialProjectsCount = 4;
---

{
  hasProjects && (
    <section id="projects" class="p-8 sm:p-12 md:p-16 lg:p-24">
      <div>
        <div class="grid grid-cols-1 lg:grid-cols-12 gap-8 lg:gap-16 items-start">
          <div class="lg:col-span-4">
            <h2 class="text-3xl sm:text-4xl md:text-5xl xl:text-7xl font-bold text-gray-900">
              Projects
            </h2>
            <div
              class="w-[75px] h-[5px] mt-2 rounded-full"
              style={`background-color: ${siteConfig.accentColor}`}
            />
          </div>

          <div class="lg:col-span-8">
            <div class="space-y-8" id="projects-container">
              {siteConfig.projects.map((project, index) => {
                const Component = project.link ? "a" : "div";
                const linkProps = project.link
                  ? {
                      href: project.link,
                      target: "_blank",
                      rel: "noopener noreferrer",
                    }
                  : {};

                const isHidden = index >= initialProjectsCount;

                return (
                  <div class={`group relative project-item card-hover ${isHidden ? 'hidden-project' : ''}`}>
                    <Component
                      {...linkProps}
                      class="block relative p-4 sm:p-6 md:p-8 bg-white rounded-xl sm:rounded-2xl border border-gray-200 shadow-sm transition-all duration-300 overflow-hidden"
                    >
                      {project.link && (
                        <div 
                          class="absolute top-4 right-4 sm:top-6 sm:right-6 md:top-8 md:right-8 w-10 h-10 sm:w-11 sm:h-11 md:w-12 md:h-12 flex items-center justify-center rounded-full text-white transition-all duration-300"
                          style={`background-color: ${siteConfig.accentColor}`}
                        >
                          <svg
                            class="w-4 h-4 sm:w-4.5 sm:h-4.5 md:w-5 md:h-5 transition-transform duration-300 group-hover:translate-x-0.5 group-hover:-translate-y-0.5"
                            fill="none"
                            stroke="currentColor"
                            viewBox="0 0 24 24"
                          >
                            <path
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              stroke-width="2"
                              d="M7 17L17 7M17 7H7M17 7V17"
                            />
                          </svg>
                        </div>
                      )}

                      <div class="space-y-4">
                        <div>
                          <span
                            class="text-sm font-mono font-semibold"
                            style={`color: ${siteConfig.accentColor}`}
                          >
                            0{index + 1}
                          </span>
                          <h3 class="text-xl sm:text-2xl font-bold text-gray-900 mt-1 group-hover:text-gray-800 transition-colors duration-300">
                            {project.name}
                          </h3>
                        </div>

                        <p
                          class={`text-base sm:text-lg text-gray-600 leading-relaxed group-hover:text-gray-700 transition-colors duration-300 ${project.link ? "pr-12 sm:pr-14 md:pr-16" : ""}`}
                        >
                          {project.description}
                        </p>

                        {project.skills && project.skills.length > 0 && (
                          <div class="flex flex-wrap gap-1.5 sm:gap-2 pt-2">
                            {project.skills.map((skill) => (
                              <span
                                class="skill-badge px-2.5 sm:px-3 py-1 sm:py-1.5 rounded-md sm:rounded-lg text-xs sm:text-sm font-medium transition-all duration-300"
                              >
                                {skill}
                              </span>
                            ))}
                          </div>
                        )}
                      </div>
                    </Component>
                  </div>
                );
              })}
            </div>
            
            {siteConfig.projects.length > initialProjectsCount && (
              <div class="flex justify-center mt-8">
                <button
                  id="show-more-btn"
                  class="btn-primary px-6 py-3 rounded-lg font-medium focus:outline-none focus:ring-2 focus:ring-offset-2"
                  style={`focus:ring-color: ${siteConfig.accentColor}`}
                >
                  Show More Projects ({siteConfig.projects.length - initialProjectsCount} more)
                </button>
                <button
                  id="show-less-btn"
                  class="btn-primary px-6 py-3 rounded-lg font-medium focus:outline-none focus:ring-2 focus:ring-offset-2 hidden"
                  style={`focus:ring-color: ${siteConfig.accentColor}`}
                >
                  Show Less
                </button>
              </div>
            )}
          </div>
        </div>
      </div>
    </section>
  )
}

<style>
  .hidden-project {
    display: none;
  }
  
  .show-project {
    display: block;
    animation: fadeInUp 0.5s ease-out forwards;
  }
  
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const showMoreBtn = document.getElementById('show-more-btn');
    const showLessBtn = document.getElementById('show-less-btn');
    const hiddenProjects = document.querySelectorAll('.hidden-project');
    
    if (showMoreBtn) {
      showMoreBtn.addEventListener('click', function() {
        hiddenProjects.forEach((project, index) => {
          setTimeout(() => {
            project.classList.remove('hidden-project');
            project.classList.add('show-project');
          }, index * 100);
        });
        
        showMoreBtn.classList.add('hidden');
        if (showLessBtn) {
          showLessBtn.classList.remove('hidden');
        }
      });
    }
    
    if (showLessBtn) {
      showLessBtn.addEventListener('click', function() {
        hiddenProjects.forEach(project => {
          project.classList.add('hidden-project');
          project.classList.remove('show-project');
        });
        
        showLessBtn.classList.add('hidden');
        if (showMoreBtn) {
          showMoreBtn.classList.remove('hidden');
        }
        
        // Scroll to projects section
        document.getElementById('projects')?.scrollIntoView({ 
          behavior: 'smooth',
          block: 'start'
        });
      });
    }
  });
</script>
